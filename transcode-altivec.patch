diff -urN transcode-0.6.3.org/libdvenc/enc_input.h transcode-0.6.3/libdvenc/enc_input.h
--- transcode-0.6.3.org/libdvenc/enc_input.h	Thu Feb 27 08:49:36 2003
+++ transcode-0.6.3/libdvenc/enc_input.h	Thu Feb 27 08:49:45 2003
@@ -32,6 +32,7 @@
 extern "C" {
 #endif
 	#define DV_ENC_MAX_INPUT_FILTERS     32
+	#define	DCT_YUV_PRECISION 8
 
 	typedef struct dv_enc_input_filter_s {
 		int (*init)(int wrong_interlace, int force_dct);
diff -urN transcode-0.6.3.org/libmpeg2/idct.c transcode-0.6.3/libmpeg2/idct.c
--- transcode-0.6.3.org/libmpeg2/idct.c	Thu Feb 27 08:49:36 2003
+++ transcode-0.6.3/libmpeg2/idct.c	Thu Feb 27 08:52:27 2003
@@ -263,7 +263,7 @@
 	fprintf (stderr, "Using MMX for IDCT transform\n");
     } else
 #endif
-#ifdef ARCH_PPC
+#if defined(ARCH_PPC) && defined(HAVE_PPC_ALTIVEC)
     if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
 	fprintf (stderr, "Using altivec for IDCT transform\n");
     } else
@@ -298,7 +298,7 @@
 	mpeg2_idct_mmx_init ();
     } else
 #endif
-#ifdef ARCH_PPC
+#if defined(ARCH_PPC) && defined(HAVE_PPC_ALTIVEC)
     if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
 	mpeg2_idct_copy = mpeg2_idct_copy_altivec;
 	mpeg2_idct_add = mpeg2_idct_add_altivec;
diff -urN transcode-0.6.3.org/libmpeg2/idct_altivec.c transcode-0.6.3/libmpeg2/idct_altivec.c
--- transcode-0.6.3.org/libmpeg2/idct_altivec.c	Thu Feb 27 08:49:36 2003
+++ transcode-0.6.3/libmpeg2/idct_altivec.c	Thu Feb 27 08:49:45 2003
@@ -25,7 +25,7 @@
 
 #include "config.h"
 
-#ifdef ARCH_PPC
+#if defined(ARCH_PPC) && defined(HAVE_PPC_ALTIVEC)
 
 #include <inttypes.h>
 
diff -urN transcode-0.6.3.org/libmpeg2/motion_comp.c transcode-0.6.3/libmpeg2/motion_comp.c
--- transcode-0.6.3.org/libmpeg2/motion_comp.c	Thu Feb 27 08:49:36 2003
+++ transcode-0.6.3/libmpeg2/motion_comp.c	Thu Feb 27 08:51:41 2003
@@ -41,7 +41,7 @@
 	fprintf (stderr, "Using MMX for motion compensation\n");
     } else
 #endif
-#ifdef ARCH_PPC
+#if defined(ARCH_PPC) && defined(HAVE_PPC_ALTIVEC)
     if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
 	fprintf (stderr, "Using altivec for motion compensation\n");
     } else
@@ -65,7 +65,7 @@
 	mpeg2_mc = mpeg2_mc_mmx;
     } else
 #endif
-#ifdef ARCH_PPC
+#if defined(ARCH_PPC) && defined(HAVE_PPC_ALTIVEC)
     if (mm_accel & MM_ACCEL_PPC_ALTIVEC) {
 	mpeg2_mc = mpeg2_mc_altivec;
     } else
diff -urN transcode-0.6.3.org/libmpeg2/motion_comp_altivec.c transcode-0.6.3/libmpeg2/motion_comp_altivec.c
--- transcode-0.6.3.org/libmpeg2/motion_comp_altivec.c	Thu Feb 27 08:49:36 2003
+++ transcode-0.6.3/libmpeg2/motion_comp_altivec.c	Thu Feb 27 08:49:45 2003
@@ -25,7 +25,7 @@
 
 #include "config.h"
 
-#ifdef ARCH_PPC
+#if defined(ARCH_PPC) && defined(HAVE_PPC_ALTIVEC)
 
 #include <inttypes.h>
 
diff -urN transcode-0.6.3.org/libvo/cpu_accel.c transcode-0.6.3/libvo/cpu_accel.c
--- transcode-0.6.3.org/libvo/cpu_accel.c	Thu Feb 27 08:49:36 2003
+++ transcode-0.6.3/libvo/cpu_accel.c	Thu Feb 27 08:49:45 2003
@@ -115,6 +115,7 @@
 
     canjump = 1;
 
+#if defined(HAVE_PPC_ALTIVEC)
     asm volatile ("mtspr 256, %0\n\t"
 		  "vand %%v0, %%v0, %%v0"
 		  :
@@ -122,6 +123,9 @@
 
     signal (SIGILL, SIG_DFL);
     return MM_ACCEL_PPC_ALTIVEC;
+#else
+    return 0;
+#endif
 }
 #endif /* ARCH_PPC */
 
